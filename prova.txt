Resumo do resumo do resumo

Resumo detalhado do capítulo sobre sistemas de bancos de dados:
Arquitetura ANSI/SPARC:
Divide sistemas de bancos de dados em três níveis:
Nível Interno: Trata da armazenagem física dos dados.
Nível Externo: Focado na visualização dos dados pelos usuários.
Nível Conceitual: Intermediário, oferece uma visão comunitária dos dados.
Esquemas: Descrições dos dados em cada nível.
Mapeamentos: Correspondências entre os esquemas dos diferentes níveis, essenciais para a independência de dados lógica e física.
Interação dos Usuários com os Dados:
Usuários (usuários finais e programadores de aplicações) operam no nível externo.
Utilizam uma Sublinguagem de Dados, dividida em:
Linguagem de Definição de Dados (DDL).
Linguagem de Manipulação de Dados (DML).
Esta sublinguagem está incorporada em uma linguagem hospedeira.
Os limites entre linguagem hospedeira, DDL e DML são conceituais e devem ser transparentes ao usuário.
Funções do DBA e do SGBD:
DBA (Database Administrator):
Responsável pelo esquema interno (projeto físico do banco de dados).
Administrador de Dados (DA):
Responsável pelo esquema conceitual (projeto lógico do banco de dados).
SGBD (Sistema de Gerenciamento de Banco de Dados):
Implementa requisições DDL e DML dos usuários.
Providencia funções de dicionário de dados.
Sistemas Cliente-Servidor em Bancos de Dados:
O SGBD atua como servidor, e as aplicações como clientes.
Podem operar em máquinas diferentes, permitindo processamento distribuído.
Um servidor pode atender vários clientes, e um cliente pode acessar vários servidores.
Se há transparência total, onde o cliente interage como se estivesse lidando com um único servidor, constitui-se um verdadeiro sistema de banco de dados distribuído.

Para responder às perguntas referentes ao Capítulo 2 do livro "Introdução a Sistemas de Bancos de Dados" de C.J. Date, vou abordar cada ponto individualmente:
1. Desenhe um diagrama da arquitetura de sistemas de bancos de dados apresentada neste capítulo (a arquitetura ANSI/SPARC).
A arquitetura ANSI/SPARC divide um sistema de banco de dados em três níveis: o nível interno, o nível conceitual e o nível externo. O nível interno lida com o armazenamento físico dos dados, o nível conceitual oferece uma visão comunitária dos dados, e o nível externo é o mais próximo dos usuários, tratando de como os dados são visualizados por usuários individuais. Você pode visualizar o diagrama detalhado na página 82.
2. Explique os seguintes termos:
Back End: Refere-se à parte do sistema de banco de dados que interage diretamente com o banco de dados, realizando operações como armazenamento e recuperação de dados.
Linguagem de Manipulação de Dados (DML): Uma linguagem usada para acessar e modificar dados em um banco de dados, como SQL.
Banco de Dados Distribuído: Um banco de dados cujos componentes estão espalhados por diferentes locais na rede, mas que funcionam como um único sistema.
Linguagem Hospedeira: A linguagem de programação utilizada para escrever aplicações que interagem com o banco de dados, como Java ou C#.
Carga: Refere-se ao processo de adicionar grandes volumes de dados ao banco de dados.
Mapeamento Conceitual/Interno: O processo de traduzir os dados do nível conceitual para o nível interno, definindo como os dados são armazenados fisicamente.
Cliente: No contexto de bancos de dados, é uma aplicação ou usuário que acessa o banco de dados, geralmente através de um servidor.
Mapeamento Externo/Conceitual: O processo de converter dados do nível conceitual para o nível externo, definindo como os dados são apresentados aos usuários.
DDL Externa, Esquema Externo, Visão Externa: Refere-se à definição de dados e à estrutura do nível externo do banco de dados, que determina como os dados são apresentados aos usuários finais.
Processamento Distribuído: Refere-se ao processamento de dados em um sistema distribuído, onde o processamento é dividido entre vários locais ou máquinas.
DDL Conceitual, Esquema Conceitual, Visão Conceitual: Refere-se à definição de dados e à estrutura do nível conceitual do banco de dados, que representa uma visão global dos dados.
Projeto Lógico de Banco de Dados: O processo de modelagem de como os dados são logicamente armazenados e relacionados uns com os outros, geralmente no nível conceitual.
DDL Interna, Esquema Interno, Visão Interna: Refere-se à definição de dados e à estrutura do nível interno do banco de dados, que lida com o armazenamento físico dos dados.
Projeto Físico de Banco de Dados: O processo de determinar como os dados serão fisicamente armazenados e acessados no nível interno.
Definição de Banco de Dados Armazenado: Refere-se à definição de todas as estruturas de dados, como tabelas, índices e restrições, que são armazenadas no banco de dados.
Reorganização: O processo de reestruturar o banco de dados para melhorar o desempenho ou a eficiência do armazenamento.
Descarga/Recarga (Dump/Reload): O processo de exportar todos os dados de um banco de dados (descarga) e depois importá-los novamente (recarga), geralmente usado para migração ou backup.
Requisição Não Planejada: Uma consulta ou transação no banco de dados que não foi previamente prevista ou programada.
Dicionário de Dados: Uma coleção de definições e informações sobre os dados no banco de dados, como esquemas, tabelas, colunas e restrições.
Requisição Planejada: Uma consulta ou transação que é regular e previamente conhecida no sistema de banco de dados.
Front End: A interface através da qual os usuários interagem com o banco de dados, como aplicativos de software ou interfaces web.
Servidor: No contexto de bancos de dados, refere-se ao sistema que hospeda o banco de dados e responde às solicitações dos clientes.
Gerenciador DC: Um componente de sistemas de banco de dados responsável pela gestão de comunicação de dados e mensagens entre diferentes partes do sistema.
Sistema DB/DC: Um sistema que combina funcionalidades de gerenciamento de banco de dados (DB) e comunicação de dados (DC).
Interface como o Usuário: A maneira como um usuário interage com o sistema de banco de dados, que pode variar de interfaces gráficas a linguagens de consulta.
Sublinguagem de Dados: Uma linguagem usada para definir e manipular dados, geralmente parte de uma linguagem de programação maior ou integrada a um SGBD.
Linguagem de Definição de Dados (DDL): Uma linguagem usada para definir a estrutura de um banco de dados, como tabelas, índices e relacionamentos.
Utilitário: Ferramentas fornecidas pelo sistema de banco de dados para auxiliar em tarefas como backup, recuperação e otimização.
3. Descreva a sequência de passos envolvida na busca de determinada ocorrência de registro externo.
A busca de uma ocorrência de registro externo envolve converter uma requisição no nível externo para o nível conceitual e depois para o nível interno, onde os dados são fisicamente localizados e acessados. Isso envolve o uso dos mapeamentos externo/conceitual e conceitual/interno.
4. Liste as funções mais importantes executadas pelo SGBD.
As funções mais importantes de um SGBD incluem definição de dados, manipulação de dados, garantia de segurança e integridade dos dados, gerenciamento de transações, suporte a consultas e relatórios, e otimização de desempenho.
5. Estabeleça a distinção entre independência de dados lógica e física.
A independência de dados lógica refere-se à capacidade de modificar o esquema conceitual sem alterar os esquemas externos ou as aplicações. A independência de dados física diz respeito à capacidade de modificar o esquema interno sem alterar o esquema conceitual ou as aplicações.
6. O que você entende pelo termo metadados?
Metadados são dados sobre dados. Eles descrevem a estrutura, organização, gerenciamento e armazenamento de dados em um banco de dados.
7. Liste algumas das funções mais importantes executadas pelo DBA.
O DBA (Database Administrator) é responsável por instalar e configurar o SGBD, garantir a segurança e a integridade dos dados, gerenciar o acesso dos usuários, monitorar o desempenho do sistema, realizar backups e recuperações, e manter o dicionário de dados.
8. Estabeleça a distinção entre o SGBD e um sistema de gerenciamento de arquivos.
Um SGBD é um software especializado para gerenciar bancos de dados, oferecendo funcionalidades como gerenciamento de transações, suporte a várias linguagens de consulta e manipulação de dados, e garantia de integridade e segurança. Um sistema de gerenciamento de arquivos é mais básico, oferecendo funcionalidades para armazenamento, recuperação e organização de arquivos em um sistema de computador, mas sem as funcionalidades avançadas de um SGBD.
9. Dê alguns exemplos de ferramentas fornecidas pelo fabricante.
Exemplos incluem ferramentas de modelagem de dados, ferramentas de desenvolvimento de aplicações, utilitários de importação/exportação de dados, ferramentas de monitoramento de desempenho, e ferramentas de diagnóstico e otimização.
10 - Exemplos de Utilitários de Bancos de Dados:

Ferramentas de Backup e Restauração: Para criar cópias de segurança dos dados e restaurá-los em caso de perda.
Gerenciadores de Performance: Para monitorar e otimizar o desempenho do banco de dados.
Ferramentas de Importação/Exportação de Dados: Para mover dados entre diferentes bancos de dados ou formatos de arquivo.
Utilitários de Auditoria: Para rastrear e registrar atividades específicas no banco de dados.
Ferramentas de Replicação: Para copiar dados de um banco de dados para outro, assegurando consistência e redundância.
Compiladores de SQL: Para traduzir comandos SQL em instruções que o sistema de banco de dados possa entender.
Ferramentas de Administração e Monitoramento: Para gerenciar aspectos como segurança, usuários e permissões.
11 -
Mapeando um Sistema de Banco de Dados na Arquitetura ANSI/SPARC:
Para examinar um sistema de banco de dados específico e mapeá-lo na arquitetura ANSI/SPARC, você deve considerar os seguintes aspectos:

Três Níveis da Arquitetura:

Verifique se o sistema possui uma clara distinção entre os níveis interno (armazenamento físico), conceitual (visão comunitária) e externo (visão do usuário).
Mapeamentos entre Níveis:

Identifique como o sistema realiza o mapeamento entre esses níveis. Isso envolve entender como os dados são transformados de uma representação física para uma lógica e, em seguida, para representações específicas do usuário.
DDLs (Linguagens de Definição de Dados):

Analise as DDLs utilizadas para definir esquemas nos diferentes níveis. Estas podem variar em complexidade e funcionalidade.


Sublinguagens de Dados:

Determine quais sublinguagens de dados (como DDL e DML) são suportadas pelo sistema.


Linguagens Hospedeiras:

Verifique quais linguagens de programação podem ser usadas para interagir com o banco de dados.


Função de DBA:

Identifique quem executa as funções de DBA no sistema, que pode variar de acordo com a organização.


Dispositivos de Segurança e Integridade:

Examine as medidas de segurança e integridade de dados implementadas no sistema.
Dicionário de Dados:

Verifique se existe um dicionário de dados e se ele é autodescritivo, fornecendo informações sobre sua própria estrutura e conteúdo.


Aplicações e Utilitários do Fabricante:

Identifique quais aplicações e utilitários específicos são fornecidos pelo fabricante do sistema de banco de dados.


Gerenciador DC Separado e Processamento Distribuído:

Investigue se o sistema possui um gerenciador de comunicação de dados (DC) separado e se suporta recursos de processamento distribuído.

